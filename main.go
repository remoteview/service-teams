package main

import (
	"fmt"
	"os"
	"time"

	"github.com/gin-contrib/cors"
	"github.com/gin-gonic/gin"
	"github.com/remoteview/service-teams/common"
	_ "github.com/remoteview/service-teams/docs" // docs is generated by Swag CLI, you have to import it.
	"github.com/remoteview/service-teams/healthcheck"
	"github.com/swaggo/gin-swagger"
	"github.com/swaggo/gin-swagger/swaggerFiles"
)

// @title Teams api
// @version 1.0
// @description Teams api endpoint

// @contact.name Ivan Santos
// @contact.url https://ivansantos.me
// @contact.email pingme@ivansantos.me

// @host localhost:3002
// @BasePath /
func main() {
	goEnv := os.Getenv("GO_ENV")
	if goEnv == "" {
		goEnv = "development"
	}
	db := common.Init(goEnv)
	if goEnv != "test" {
		err := common.DbMigrate(db)
		if err != nil {
			fmt.Println("migration err: ", err)
		}
	}
	defer func() {
		err := db.Close()
		if err != nil {
			fmt.Println("Error closing server")
		}
	}()

	r := gin.Default()

	r.GET("/_health", healthcheck.Handler)

	r.Use(cors.New(cors.Config{
		AllowMethods:     []string{"GET", "POST", "PUT", "PATCH", "OPTIONS"},
		AllowHeaders:     []string{"Origin"},
		AllowAllOrigins:  true,
		ExposeHeaders:    []string{"Content-Length"},
		AllowCredentials: true,
		MaxAge:           12 * time.Hour,
	}))
	r.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))

	fmt.Println("Running server!")
	err := r.Run(":3002")
	if err != nil {
		fmt.Println("Error starting server")
	}
}
